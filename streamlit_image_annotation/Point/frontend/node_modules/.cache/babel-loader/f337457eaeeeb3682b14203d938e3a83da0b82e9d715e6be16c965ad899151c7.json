{"ast":null,"code":"import _inherits from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n  var retArr = [],\n    len = arr.length,\n    util = Util,\n    n,\n    val;\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nvar COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nvar traceArrMax = 100;\nexport var Context = /*#__PURE__*/function () {\n  function Context(canvas) {\n    _classCallCheck(this, Context);\n    this.canvas = canvas;\n    if (Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  _createClass(Context, [{\n    key: \"fillShape\",\n    value: function fillShape(shape) {\n      if (shape.fillEnabled()) {\n        this._fill(shape);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {}\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {}\n  }, {\n    key: \"fillStrokeShape\",\n    value: function fillStrokeShape(shape) {\n      if (shape.attrs.fillAfterStrokeEnabled) {\n        this.strokeShape(shape);\n        this.fillShape(shape);\n      } else {\n        this.fillShape(shape);\n        this.strokeShape(shape);\n      }\n    }\n  }, {\n    key: \"getTrace\",\n    value: function getTrace(relaxed, rounded) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Util._isArray(args[0])) {\n              str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              if (rounded) {\n                args = args.map(function (a) {\n                  return typeof a === 'number' ? Math.floor(a) : a;\n                });\n              }\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n        str += SEMICOLON;\n      }\n      return str;\n    }\n  }, {\n    key: \"clearTrace\",\n    value: function clearTrace() {\n      this.traceArr = [];\n    }\n  }, {\n    key: \"_trace\",\n    value: function _trace(str) {\n      var traceArr = this.traceArr,\n        len;\n      traceArr.push(str);\n      len = traceArr.length;\n      if (len >= traceArrMax) {\n        traceArr.shift();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      var canvas = this.getCanvas();\n      if (bounds) {\n        this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n      } else {\n        this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n      }\n    }\n  }, {\n    key: \"_applyLineCap\",\n    value: function _applyLineCap(shape) {\n      var lineCap = shape.attrs.lineCap;\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    }\n  }, {\n    key: \"_applyOpacity\",\n    value: function _applyOpacity(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    }\n  }, {\n    key: \"_applyLineJoin\",\n    value: function _applyLineJoin(shape) {\n      var lineJoin = shape.attrs.lineJoin;\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      this._context[attr] = val;\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(a0, a1, a2, a3, a4, a5) {\n      this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"arcTo\",\n    value: function arcTo(a0, a1, a2, a3, a4) {\n      this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n  }, {\n    key: \"beginPath\",\n    value: function beginPath() {\n      this._context.beginPath();\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n      this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"clearRect\",\n    value: function clearRect(a0, a1, a2, a3) {\n      this._context.clearRect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"clip\",\n    value: function clip() {\n      this._context.clip();\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      this._context.closePath();\n    }\n  }, {\n    key: \"createImageData\",\n    value: function createImageData(a0, a1) {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a0, a1);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a0);\n      }\n    }\n  }, {\n    key: \"createLinearGradient\",\n    value: function createLinearGradient(a0, a1, a2, a3) {\n      return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"createPattern\",\n    value: function createPattern(a0, a1) {\n      return this._context.createPattern(a0, a1);\n    }\n  }, {\n    key: \"createRadialGradient\",\n    value: function createRadialGradient(a0, a1, a2, a3, a4, a5) {\n      return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"drawImage\",\n    value: function drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var a = arguments,\n        _context = this._context;\n      if (a.length === 3) {\n        _context.drawImage(a0, a1, a2);\n      } else if (a.length === 5) {\n        _context.drawImage(a0, a1, a2, a3, a4);\n      } else if (a.length === 9) {\n        _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      }\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n      this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n  }, {\n    key: \"isPointInPath\",\n    value: function isPointInPath(x, y, path, fillRule) {\n      if (path) {\n        return this._context.isPointInPath(path, x, y, fillRule);\n      }\n      return this._context.isPointInPath(x, y, fillRule);\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(path2d) {\n      if (path2d) {\n        this._context.fill(path2d);\n      } else {\n        this._context.fill();\n      }\n    }\n  }, {\n    key: \"fillRect\",\n    value: function fillRect(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    }\n  }, {\n    key: \"strokeRect\",\n    value: function strokeRect(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    }\n  }, {\n    key: \"fillText\",\n    value: function fillText(text, x, y, maxWidth) {\n      if (maxWidth) {\n        this._context.fillText(text, x, y, maxWidth);\n      } else {\n        this._context.fillText(text, x, y);\n      }\n    }\n  }, {\n    key: \"measureText\",\n    value: function measureText(text) {\n      return this._context.measureText(text);\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(a0, a1, a2, a3) {\n      return this._context.getImageData(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(a0, a1) {\n      this._context.lineTo(a0, a1);\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(a0, a1) {\n      this._context.moveTo(a0, a1);\n    }\n  }, {\n    key: \"rect\",\n    value: function rect(a0, a1, a2, a3) {\n      this._context.rect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"putImageData\",\n    value: function putImageData(a0, a1, a2) {\n      this._context.putImageData(a0, a1, a2);\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(a0, a1, a2, a3) {\n      this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._context.restore();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(a0) {\n      this._context.rotate(a0);\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this._context.save();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(a0, a1) {\n      this._context.scale(a0, a1);\n    }\n  }, {\n    key: \"setLineDash\",\n    value: function setLineDash(a0) {\n      if (this._context.setLineDash) {\n        this._context.setLineDash(a0);\n      } else if ('mozDash' in this._context) {\n        this._context['mozDash'] = a0;\n      } else if ('webkitLineDash' in this._context) {\n        this._context['webkitLineDash'] = a0;\n      }\n    }\n  }, {\n    key: \"getLineDash\",\n    value: function getLineDash() {\n      return this._context.getLineDash();\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(a0, a1, a2, a3, a4, a5) {\n      this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"stroke\",\n    value: function stroke(path2d) {\n      if (path2d) {\n        this._context.stroke(path2d);\n      } else {\n        this._context.stroke();\n      }\n    }\n  }, {\n    key: \"strokeText\",\n    value: function strokeText(a0, a1, a2, a3) {\n      this._context.strokeText(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(a0, a1, a2, a3, a4, a5) {\n      this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(a0, a1) {\n      this._context.translate(a0, a1);\n    }\n  }, {\n    key: \"_enableTrace\",\n    value: function _enableTrace() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        origSetter = this.setAttr,\n        n,\n        args;\n      var func = function func(methodName) {\n        var origMethod = that[methodName],\n          ret;\n        that[methodName] = function () {\n          args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n          that._trace({\n            method: methodName,\n            args: args\n          });\n          return ret;\n        };\n      };\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n      that.setAttr = function () {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  }, {\n    key: \"_applyGlobalCompositeOperation\",\n    value: function _applyGlobalCompositeOperation(node) {\n      var op = node.attrs.globalCompositeOperation;\n      var def = !op || op === 'source-over';\n      if (!def) {\n        this.setAttr('globalCompositeOperation', op);\n      }\n    }\n  }]);\n  return Context;\n}();\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get: function get() {\n      return this._context[prop];\n    },\n    set: function set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nexport var SceneContext = /*#__PURE__*/function (_Context) {\n  _inherits(SceneContext, _Context);\n  var _super = _createSuper(SceneContext);\n  function SceneContext(canvas) {\n    var _this;\n    _classCallCheck(this, SceneContext);\n    _this = _super.call(this, canvas);\n    _this._context = canvas._canvas.getContext('2d');\n    return _this;\n  }\n  _createClass(SceneContext, [{\n    key: \"_fillColor\",\n    value: function _fillColor(shape) {\n      var fill = shape.fill();\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillPattern\",\n    value: function _fillPattern(shape) {\n      this.setAttr('fillStyle', shape._getFillPattern());\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillLinearGradient\",\n    value: function _fillLinearGradient(shape) {\n      var grd = shape._getLinearGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fillRadialGradient\",\n    value: function _fillRadialGradient(shape) {\n      var grd = shape._getRadialGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    }\n  }, {\n    key: \"_strokeLinearGradient\",\n    value: function _strokeLinearGradient(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n      if (colorStops) {\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      var dash = shape.dash(),\n        strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n        this.setAttr('lineWidth', shape.strokeWidth());\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n        shape._strokeFunc(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }, {\n    key: \"_applyShadow\",\n    value: function _applyShadow(shape) {\n      var _a, _b, _c;\n      var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n        blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n        offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n          x: 0,\n          y: 0\n        },\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n      this.setAttr('shadowColor', color);\n      this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n  }]);\n  return SceneContext;\n}(Context);\nexport var HitContext = /*#__PURE__*/function (_Context2) {\n  _inherits(HitContext, _Context2);\n  var _super2 = _createSuper(HitContext);\n  function HitContext(canvas) {\n    var _this2;\n    _classCallCheck(this, HitContext);\n    _this2 = _super2.call(this, canvas);\n    _this2._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    return _this2;\n  }\n  _createClass(HitContext, [{\n    key: \"_fill\",\n    value: function _fill(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    }\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasHitStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      if (shape.hasHitStroke()) {\n        var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        var hitStrokeWidth = shape.hitStrokeWidth();\n        var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n        this.setAttr('lineWidth', strokeWidth);\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }]);\n  return HitContext;\n}(Context);","map":{"version":3,"names":["Util","Konva","simplifyArray","arr","retArr","len","length","util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","Context","canvas","_classCallCheck","enableTrace","traceArr","_enableTrace","_createClass","key","value","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","attrs","fillAfterStrokeEnabled","getTrace","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","clearTrace","_trace","shift","reset","pixelRatio","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","x","y","width","height","getWidth","getHeight","_applyLineCap","lineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","attr","_context","arc","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","closePath","createImageData","arguments","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","path","fillRule","fill","path2d","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","Array","prototype","slice","call","apply","prop","_applyGlobalCompositeOperation","node","op","globalCompositeOperation","def","forEach","Object","defineProperty","get","set","SceneContext","_Context","_inherits","_super","_createSuper","_this","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","HitContext","_Context2","_super2","_this2","willReadFrequently","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"sources":["/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/Context.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d');\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}