{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var Ellipse = /*#__PURE__*/function (_Shape) {\n  _inherits(Ellipse, _Shape);\n  var _super = _createSuper(Ellipse);\n  function Ellipse() {\n    _classCallCheck(this, Ellipse);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Ellipse, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var rx = this.radiusX(),\n        ry = this.radiusY();\n      context.beginPath();\n      context.save();\n      if (rx !== ry) {\n        context.scale(1, ry / rx);\n      }\n      context.arc(0, 0, rx, 0, Math.PI * 2, false);\n      context.restore();\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.radiusX() * 2;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.radiusY() * 2;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.radiusX(width / 2);\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.radiusY(height / 2);\n    }\n  }]);\n  return Ellipse;\n}(Shape);\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());","map":{"version":3,"names":["Factory","Shape","getNumberValidator","_registerNode","Ellipse","_Shape","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_sceneFunc","context","rx","radiusX","ry","radiusY","beginPath","save","scale","arc","Math","PI","restore","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","prototype","className","_centroid","_attrsAffectingSize","addComponentsGetterSetter","addGetterSetter"],"sources":["/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/shapes/Ellipse.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());\n"],"mappings":";;;;AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,aAAa,QAAQ,cAAc;AAC5C,WAAaC,OAAO,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAAA,SAAAA,QAAA;IAAAK,eAAA,OAAAL,OAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,OAAA;IAAAS,GAAA;IAAAC,KAAA,EAChB,SAAAC,WAAWC,OAAO,EAAE;MAChB,IAAIC,EAAE,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;QAAEC,EAAE,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;MAC5CJ,OAAO,CAACK,SAAS,CAAC,CAAC;MACnBL,OAAO,CAACM,IAAI,CAAC,CAAC;MACd,IAAIL,EAAE,KAAKE,EAAE,EAAE;QACXH,OAAO,CAACO,KAAK,CAAC,CAAC,EAAEJ,EAAE,GAAGF,EAAE,CAAC;MAC7B;MACAD,OAAO,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEP,EAAE,EAAE,CAAC,EAAEQ,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;MAC5CV,OAAO,CAACW,OAAO,CAAC,CAAC;MACjBX,OAAO,CAACY,SAAS,CAAC,CAAC;MACnBZ,OAAO,CAACa,eAAe,CAAC,IAAI,CAAC;IACjC;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAgB,SAAA,EAAW;MACP,OAAO,IAAI,CAACZ,OAAO,CAAC,CAAC,GAAG,CAAC;IAC7B;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAiB,UAAA,EAAY;MACR,OAAO,IAAI,CAACX,OAAO,CAAC,CAAC,GAAG,CAAC;IAC7B;EAAC;IAAAP,GAAA;IAAAC,KAAA,EACD,SAAAkB,SAASC,KAAK,EAAE;MACZ,IAAI,CAACf,OAAO,CAACe,KAAK,GAAG,CAAC,CAAC;IAC3B;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAAoB,UAAUC,MAAM,EAAE;MACd,IAAI,CAACf,OAAO,CAACe,MAAM,GAAG,CAAC,CAAC;IAC5B;EAAC;EAAA,OAAA/B,OAAA;AAAA,EAxBwBH,KAAK;AA0BlCG,OAAO,CAACgC,SAAS,CAACC,SAAS,GAAG,SAAS;AACvCjC,OAAO,CAACgC,SAAS,CAACE,SAAS,GAAG,IAAI;AAClClC,OAAO,CAACgC,SAAS,CAACG,mBAAmB,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;AAC9DpC,aAAa,CAACC,OAAO,CAAC;AACtBJ,OAAO,CAACwC,yBAAyB,CAACpC,OAAO,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChEJ,OAAO,CAACyC,eAAe,CAACrC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAEF,kBAAkB,CAAC,CAAC,CAAC;AACpEF,OAAO,CAACyC,eAAe,CAACrC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAEF,kBAAkB,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}