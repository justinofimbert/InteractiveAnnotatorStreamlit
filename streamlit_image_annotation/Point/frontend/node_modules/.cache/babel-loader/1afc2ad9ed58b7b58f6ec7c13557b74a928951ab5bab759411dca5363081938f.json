{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var Sprite = /*#__PURE__*/function (_Shape) {\n  _inherits(Sprite, _Shape);\n  var _super = _createSuper(Sprite);\n  function Sprite(config) {\n    var _this;\n    _classCallCheck(this, Sprite);\n    _this = _super.call(this, config);\n    _this._updated = true;\n    _this.anim = new Animation(function () {\n      var updated = _this._updated;\n      _this._updated = false;\n      return updated;\n    });\n    _this.on('animationChange.konva', function () {\n      this.frameIndex(0);\n    });\n    _this.on('frameIndexChange.konva', function () {\n      this._updated = true;\n    });\n    _this.on('frameRateChange.konva', function () {\n      if (!this.anim.isRunning()) {\n        return;\n      }\n      clearInterval(this.interval);\n      this._setInterval();\n    });\n    return _this;\n  }\n  _createClass(Sprite, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var anim = this.animation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.animations()[anim],\n        offsets = this.frameOffsets(),\n        x = set[ix4 + 0],\n        y = set[ix4 + 1],\n        width = set[ix4 + 2],\n        height = set[ix4 + 3],\n        image = this.image();\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim],\n            ix2 = index * 2;\n          context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    }\n  }, {\n    key: \"_hitFunc\",\n    value: function _hitFunc(context) {\n      var anim = this.animation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.animations()[anim],\n        offsets = this.frameOffsets(),\n        width = set[ix4 + 2],\n        height = set[ix4 + 3];\n      context.beginPath();\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n      context.closePath();\n      context.fillShape(this);\n    }\n  }, {\n    key: \"_useBufferCanvas\",\n    value: function _useBufferCanvas() {\n      return _get(_getPrototypeOf(Sprite.prototype), \"_useBufferCanvas\", this).call(this, true);\n    }\n  }, {\n    key: \"_setInterval\",\n    value: function _setInterval() {\n      var that = this;\n      this.interval = setInterval(function () {\n        that._updateIndex();\n      }, 1000 / this.frameRate());\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.isRunning()) {\n        return;\n      }\n      var layer = this.getLayer();\n      this.anim.setLayers(layer);\n      this._setInterval();\n      this.anim.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.anim.isRunning();\n    }\n  }, {\n    key: \"_updateIndex\",\n    value: function _updateIndex() {\n      var index = this.frameIndex(),\n        animation = this.animation(),\n        animations = this.animations(),\n        anim = animations[animation],\n        len = anim.length / 4;\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  }]);\n  return Sprite;\n}(Shape);\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n  index: 'frameIndex',\n  getIndex: 'getFrameIndex',\n  setIndex: 'setFrameIndex'\n});","map":{"version":3,"names":["Factory","Shape","Animation","getNumberValidator","_registerNode","Sprite","_Shape","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","_updated","anim","updated","on","frameIndex","isRunning","clearInterval","interval","_setInterval","_createClass","key","value","_sceneFunc","context","animation","index","ix4","set","animations","offsets","frameOffsets","x","y","width","height","image","hasFill","hasStroke","beginPath","rect","closePath","fillStrokeShape","offset","ix2","drawImage","_hitFunc","fillShape","_useBufferCanvas","_get","_getPrototypeOf","prototype","that","setInterval","_updateIndex","frameRate","start","layer","getLayer","setLayers","stop","len","length","className","addGetterSetter","backCompat","getIndex","setIndex"],"sources":["/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/shapes/Sprite.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Sprite extends Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}