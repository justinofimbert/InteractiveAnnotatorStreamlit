{"ast":null,"code":"import _slicedToArray from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _mouse, _touch, _pointer;\nimport { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage',\n  STRING = 'string',\n  PX = 'px',\n  MOUSEOUT = 'mouseout',\n  MOUSELEAVE = 'mouseleave',\n  MOUSEOVER = 'mouseover',\n  MOUSEENTER = 'mouseenter',\n  MOUSEMOVE = 'mousemove',\n  MOUSEDOWN = 'mousedown',\n  MOUSEUP = 'mouseup',\n  POINTERMOVE = 'pointermove',\n  POINTERDOWN = 'pointerdown',\n  POINTERUP = 'pointerup',\n  POINTERCANCEL = 'pointercancel',\n  LOSTPOINTERCAPTURE = 'lostpointercapture',\n  POINTEROUT = 'pointerout',\n  POINTERLEAVE = 'pointerleave',\n  POINTEROVER = 'pointerover',\n  POINTERENTER = 'pointerenter',\n  CONTEXTMENU = 'contextmenu',\n  TOUCHSTART = 'touchstart',\n  TOUCHEND = 'touchend',\n  TOUCHMOVE = 'touchmove',\n  TOUCHCANCEL = 'touchcancel',\n  WHEEL = 'wheel',\n  MAX_LAYERS_NUMBER = 5,\n  EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nvar EVENTS_MAP = {\n  mouse: (_mouse = {}, _defineProperty(_mouse, POINTEROUT, MOUSEOUT), _defineProperty(_mouse, POINTERLEAVE, MOUSELEAVE), _defineProperty(_mouse, POINTEROVER, MOUSEOVER), _defineProperty(_mouse, POINTERENTER, MOUSEENTER), _defineProperty(_mouse, POINTERMOVE, MOUSEMOVE), _defineProperty(_mouse, POINTERDOWN, MOUSEDOWN), _defineProperty(_mouse, POINTERUP, MOUSEUP), _defineProperty(_mouse, POINTERCANCEL, 'mousecancel'), _defineProperty(_mouse, \"pointerclick\", 'click'), _defineProperty(_mouse, \"pointerdblclick\", 'dblclick'), _mouse),\n  touch: (_touch = {}, _defineProperty(_touch, POINTEROUT, 'touchout'), _defineProperty(_touch, POINTERLEAVE, 'touchleave'), _defineProperty(_touch, POINTEROVER, 'touchover'), _defineProperty(_touch, POINTERENTER, 'touchenter'), _defineProperty(_touch, POINTERMOVE, TOUCHMOVE), _defineProperty(_touch, POINTERDOWN, TOUCHSTART), _defineProperty(_touch, POINTERUP, TOUCHEND), _defineProperty(_touch, POINTERCANCEL, TOUCHCANCEL), _defineProperty(_touch, \"pointerclick\", 'tap'), _defineProperty(_touch, \"pointerdblclick\", 'dbltap'), _touch),\n  pointer: (_pointer = {}, _defineProperty(_pointer, POINTEROUT, POINTEROUT), _defineProperty(_pointer, POINTERLEAVE, POINTERLEAVE), _defineProperty(_pointer, POINTEROVER, POINTEROVER), _defineProperty(_pointer, POINTERENTER, POINTERENTER), _defineProperty(_pointer, POINTERMOVE, POINTERMOVE), _defineProperty(_pointer, POINTERDOWN, POINTERDOWN), _defineProperty(_pointer, POINTERUP, POINTERUP), _defineProperty(_pointer, POINTERCANCEL, POINTERCANCEL), _defineProperty(_pointer, \"pointerclick\", 'pointerclick'), _defineProperty(_pointer, \"pointerdblclick\", 'pointerdblclick'), _pointer)\n};\nvar getEventType = function getEventType(type) {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n  return 'mouse';\n};\nvar getEventsMap = function getEventsMap(eventType) {\n  var type = getEventType(eventType);\n  if (type === 'pointer') {\n    return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\nfunction checkNoClip() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n  return attrs;\n}\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\nexport var stages = [];\nexport var Stage = /*#__PURE__*/function (_Container) {\n  _inherits(Stage, _Container);\n  var _super = _createSuper(Stage);\n  function Stage(config) {\n    var _this;\n    _classCallCheck(this, Stage);\n    _this = _super.call(this, checkNoClip(config));\n    _this._pointerPositions = [];\n    _this._changedPointerPositions = [];\n    _this._buildDOM();\n    _this._bindContentEvents();\n    stages.push(_assertThisInitialized(_this));\n    _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\n    _this.on('visibleChange.konva', _this._checkVisibility);\n    _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\n      checkNoClip(_this.attrs);\n    });\n    _this._checkVisibility();\n    return _this;\n  }\n  _createClass(Stage, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var isLayer = child.getType() === 'Layer';\n      var isFastLayer = child.getType() === 'FastLayer';\n      var valid = isLayer || isFastLayer;\n      if (!valid) {\n        Util.throw('You may only add layers to the stage.');\n      }\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      if (!this.content) {\n        return;\n      }\n      var style = this.visible() ? '' : 'none';\n      this.content.style.display = style;\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr('container', container);\n      if (this.content) {\n        if (this.content.parentElement) {\n          this.content.parentElement.removeChild(this.content);\n        }\n        container.appendChild(this.content);\n      }\n      return this;\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit() {\n      return true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = typeof document !== 'undefined' && document.createElement('div');\n      return Container.prototype.clone.call(this, obj);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Stage.prototype), \"destroy\", this).call(this);\n      var content = this.content;\n      if (content && Util._isInDocument(content)) {\n        this.container().removeChild(content);\n      }\n      var index = stages.indexOf(this);\n      if (index > -1) {\n        stages.splice(index, 1);\n      }\n      Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n      return this;\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n      if (!pos) {\n        Util.warn(NO_POINTERS_MESSAGE);\n        return null;\n      }\n      return {\n        x: pos.x,\n        y: pos.y\n      };\n    }\n  }, {\n    key: \"_getPointerById\",\n    value: function _getPointerById(id) {\n      return this._pointerPositions.find(function (p) {\n        return p.id === id;\n      });\n    }\n  }, {\n    key: \"getPointersPositions\",\n    value: function getPointersPositions() {\n      return this._pointerPositions;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this.content;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.x = config.x || 0;\n      config.y = config.y || 0;\n      config.width = config.width || this.width();\n      config.height = config.height || this.height();\n      var canvas = new SceneCanvas({\n        width: config.width,\n        height: config.height,\n        pixelRatio: config.pixelRatio || 1\n      });\n      var _context = canvas.getContext()._context;\n      var layers = this.children;\n      if (config.x || config.y) {\n        _context.translate(-1 * config.x, -1 * config.y);\n      }\n      layers.forEach(function (layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n        var layerCanvas = layer._toKonvaCanvas(config);\n        _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n      });\n      return canvas;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!pos) {\n        return null;\n      }\n      var layers = this.children,\n        len = layers.length,\n        end = len - 1,\n        n;\n      for (n = end; n >= 0; n--) {\n        var shape = layers[n].getIntersection(pos);\n        if (shape) {\n          return shape;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_resizeDOM\",\n    value: function _resizeDOM() {\n      var width = this.width();\n      var height = this.height();\n      if (this.content) {\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n      }\n      this.bufferCanvas.setSize(width, height);\n      this.bufferHitCanvas.setSize(width, height);\n      this.children.forEach(function (layer) {\n        layer.setSize({\n          width: width,\n          height: height\n        });\n        layer.draw();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(layer) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      _get(_getPrototypeOf(Stage.prototype), \"add\", this).call(this, layer);\n      var length = this.children.length;\n      if (length > MAX_LAYERS_NUMBER) {\n        Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n      }\n      layer.setSize({\n        width: this.width(),\n        height: this.height()\n      });\n      layer.draw();\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n      return this;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return null;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return null;\n    }\n  }, {\n    key: \"hasPointerCapture\",\n    value: function hasPointerCapture(pointerId) {\n      return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"setPointerCapture\",\n    value: function setPointerCapture(pointerId) {\n      PointerEvents.setPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"releaseCapture\",\n    value: function releaseCapture(pointerId) {\n      PointerEvents.releaseCapture(pointerId, this);\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.children;\n    }\n  }, {\n    key: \"_bindContentEvents\",\n    value: function _bindContentEvents() {\n      var _this2 = this;\n      if (!Konva.isBrowser) {\n        return;\n      }\n      EVENTS.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          event = _ref2[0],\n          methodName = _ref2[1];\n        _this2.content.addEventListener(event, function (evt) {\n          _this2[methodName](evt);\n        }, {\n          passive: false\n        });\n      });\n    }\n  }, {\n    key: \"_pointerenter\",\n    value: function _pointerenter(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_pointerover\",\n    value: function _pointerover(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_getTargetShape\",\n    value: function _getTargetShape(evenType) {\n      var shape = this[evenType + 'targetShape'];\n      if (shape && !shape.getStage()) {\n        shape = null;\n      }\n      return shape;\n    }\n  }, {\n    key: \"_pointerleave\",\n    value: function _pointerleave(evt) {\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var targetShape = this._getTargetShape(eventType);\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n      if (targetShape && eventsEnabled) {\n        targetShape._fireAndBubble(events.pointerout, {\n          evt: evt\n        });\n        targetShape._fireAndBubble(events.pointerleave, {\n          evt: evt\n        });\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this[eventType + 'targetShape'] = null;\n      } else if (eventsEnabled) {\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this._fire(events.pointerout, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this.pointerPos = undefined;\n      this._pointerPositions = [];\n    }\n  }, {\n    key: \"_pointerdown\",\n    value: function _pointerdown(evt) {\n      var _this3 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = _this3.getIntersection(pos);\n        DD.justDragged = false;\n        Konva['_' + eventType + 'ListenClick'] = true;\n        var hasShape = shape && shape.isListening();\n        if (!hasShape) {\n          return;\n        }\n        if (Konva.capturePointerEventsEnabled) {\n          shape.setPointerCapture(pos.id);\n        }\n        _this3[eventType + 'ClickStartShape'] = shape;\n        shape._fireAndBubble(events.pointerdown, {\n          evt: evt,\n          pointerId: pos.id\n        });\n        triggeredOnShape = true;\n        var isTouch = evt.type.indexOf('touch') >= 0;\n        if (shape.preventDefault() && evt.cancelable && isTouch) {\n          evt.preventDefault();\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerdown, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._pointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointermove\",\n    value: function _pointermove(evt) {\n      var _this4 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n        evt.preventDefault();\n      }\n      this.setPointersPositions(evt);\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n      if (!eventsEnabled) {\n        return;\n      }\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      var targetShape = this._getTargetShape(eventType);\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this4.getIntersection(pos);\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var differentTarget = targetShape !== shape;\n        if (differentTarget && targetShape) {\n          targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n          targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n        }\n        if (shape) {\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          if (differentTarget) {\n            shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n            shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n            _this4[eventType + 'targetShape'] = shape;\n          }\n          shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n        } else {\n          if (targetShape) {\n            _this4._fire(events.pointerover, {\n              evt: evt,\n              target: _this4,\n              currentTarget: _this4,\n              pointerId: pointerId\n            });\n            _this4[eventType + 'targetShape'] = null;\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointermove, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointerup\",\n    value: function _pointerup(evt) {\n      var _this5 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var clickStartShape = this[eventType + 'ClickStartShape'];\n      var clickEndShape = this[eventType + 'ClickEndShape'];\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this5.getIntersection(pos);\n        if (shape) {\n          shape.releaseCapture(pos.id);\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var fireDblClick = false;\n        if (Konva['_' + eventType + 'InDblClickWindow']) {\n          fireDblClick = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        } else if (!DD.justDragged) {\n          Konva['_' + eventType + 'InDblClickWindow'] = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        }\n        _this5[eventType + 'DblTimeout'] = setTimeout(function () {\n          Konva['_' + eventType + 'InDblClickWindow'] = false;\n        }, Konva.dblClickWindow);\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          _this5[eventType + 'ClickEndShape'] = shape;\n          shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n          if (Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n            shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n            if (fireDblClick && clickEndShape && clickEndShape === shape) {\n              shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n            }\n          }\n        } else {\n          _this5[eventType + 'ClickEndShape'] = null;\n          if (Konva['_' + eventType + 'ListenClick']) {\n            _this5._fire(events.pointerclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n          if (fireDblClick) {\n            _this5._fire(events.pointerdblclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerup, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n      Konva['_' + eventType + 'ListenClick'] = false;\n      if (evt.cancelable && eventType !== 'touch') {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"_contextmenu\",\n    value: function _contextmenu(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, {\n          evt: evt\n        });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_wheel\",\n    value: function _wheel(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, {\n          evt: evt\n        });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_pointercancel\",\n    value: function _pointercancel(evt) {\n      this.setPointersPositions(evt);\n      var shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n      if (shape) {\n        shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n      }\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"_lostpointercapture\",\n    value: function _lostpointercapture(evt) {\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"setPointersPositions\",\n    value: function setPointersPositions(evt) {\n      var _this6 = this;\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n      if (evt.touches !== undefined) {\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        Array.prototype.forEach.call(evt.touches, function (touch) {\n          _this6._pointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n        Array.prototype.forEach.call(evt.changedTouches || evt.touches, function (touch) {\n          _this6._changedPointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n      } else {\n        x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n        y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n        this._pointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n        this._changedPointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n      }\n    }\n  }, {\n    key: \"_setPointerPosition\",\n    value: function _setPointerPosition(evt) {\n      Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n      this.setPointersPositions(evt);\n    }\n  }, {\n    key: \"_getContentPosition\",\n    value: function _getContentPosition() {\n      if (!this.content || !this.content.getBoundingClientRect) {\n        return {\n          top: 0,\n          left: 0,\n          scaleX: 1,\n          scaleY: 1\n        };\n      }\n      var rect = this.content.getBoundingClientRect();\n      return {\n        top: rect.top,\n        left: rect.left,\n        scaleX: rect.width / this.content.clientWidth || 1,\n        scaleY: rect.height / this.content.clientHeight || 1\n      };\n    }\n  }, {\n    key: \"_buildDOM\",\n    value: function _buildDOM() {\n      this.bufferCanvas = new SceneCanvas({\n        width: this.width(),\n        height: this.height()\n      });\n      this.bufferHitCanvas = new HitCanvas({\n        pixelRatio: 1,\n        width: this.width(),\n        height: this.height()\n      });\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.container();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      container.innerHTML = '';\n      this.content = document.createElement('div');\n      this.content.style.position = 'relative';\n      this.content.style.userSelect = 'none';\n      this.content.className = 'konvajs-content';\n      this.content.setAttribute('role', 'presentation');\n      container.appendChild(this.content);\n      this._resizeDOM();\n    }\n  }, {\n    key: \"cache\",\n    value: function cache() {\n      Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n      return this;\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      return this;\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      this.getChildren().forEach(function (layer) {\n        layer.batchDraw();\n      });\n      return this;\n    }\n  }]);\n  return Stage;\n}(Container);\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');","map":{"version":3,"names":["Util","Factory","Container","Konva","SceneCanvas","HitCanvas","DD","_registerNode","PointerEvents","STAGE","STRING","PX","MOUSEOUT","MOUSELEAVE","MOUSEOVER","MOUSEENTER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","POINTERMOVE","POINTERDOWN","POINTERUP","POINTERCANCEL","LOSTPOINTERCAPTURE","POINTEROUT","POINTERLEAVE","POINTEROVER","POINTERENTER","CONTEXTMENU","TOUCHSTART","TOUCHEND","TOUCHMOVE","TOUCHCANCEL","WHEEL","MAX_LAYERS_NUMBER","EVENTS","EVENTS_MAP","mouse","_mouse","_defineProperty","touch","_touch","pointer","_pointer","getEventType","type","indexOf","getEventsMap","eventType","pointerEventsEnabled","checkNoClip","attrs","arguments","length","undefined","clipFunc","clipWidth","clipHeight","warn","NO_POINTERS_MESSAGE","stages","Stage","_Container","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","_pointerPositions","_changedPointerPositions","_buildDOM","_bindContentEvents","push","_assertThisInitialized","on","_resizeDOM","_checkVisibility","_createClass","key","value","_validateAdd","child","isLayer","getType","isFastLayer","valid","throw","content","style","visible","display","setContainer","container","charAt","className","slice","document","getElementsByClassName","id","getElementById","_setAttr","parentElement","removeChild","appendChild","shouldDrawHit","clear","layers","children","len","n","clone","obj","createElement","prototype","destroy","_get","_getPrototypeOf","_isInDocument","index","splice","releaseCanvas","bufferCanvas","_canvas","bufferHitCanvas","getPointerPosition","pos","x","y","_getPointerById","find","p","getPointersPositions","getStage","getContent","_toKonvaCanvas","width","height","canvas","pixelRatio","_context","getContext","translate","forEach","layer","isVisible","layerCanvas","drawImage","getWidth","getPixelRatio","getHeight","getIntersection","end","shape","setSize","draw","add","_len","rest","Array","_key","i","isBrowser","getParent","getLayer","hasPointerCapture","pointerId","setPointerCapture","releaseCapture","getLayers","_this2","_ref","_ref2","_slicedToArray","event","methodName","addEventListener","evt","passive","_pointerenter","setPointersPositions","events","_fire","pointerenter","target","currentTarget","_pointerover","pointerover","_getTargetShape","evenType","_pointerleave","targetShape","eventsEnabled","isDragging","hitOnDragEnabled","_fireAndBubble","pointerout","pointerleave","pointerPos","_pointerdown","_this3","triggeredOnShape","justDragged","hasShape","isListening","capturePointerEventsEnabled","pointerdown","isTouch","preventDefault","cancelable","_pointermove","_this4","node","processedShapesIds","getCapturedShape","differentTarget","Object","assign","_id","pointermove","_pointerup","_this5","clickStartShape","clickEndShape","fireDblClick","clearTimeout","setTimeout","dblClickWindow","pointerup","pointerclick","pointerdblclick","_contextmenu","_wheel","_pointercancel","createEvent","_lostpointercapture","_this6","contentPosition","_getContentPosition","window","touches","identifier","clientX","left","scaleX","clientY","top","scaleY","changedTouches","_getFirstPointerId","_setPointerPosition","getBoundingClientRect","rect","clientWidth","clientHeight","innerHTML","position","userSelect","setAttribute","cache","clearCache","batchDraw","getChildren","nodeType","addGetterSetter"],"sources":["/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/Stage.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexport const stages = [];\nexport class Stage extends Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = stages.indexOf(this);\n        if (index > -1) {\n            stages.splice(index, 1);\n        }\n        Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DD.justDragged = false;\n            Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DD.justDragged) {\n                Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}