{"ast":null,"code":"var _slicedToArray = require(\"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar React = require('react');\nmodule.exports = function useImage(url, crossOrigin, referrerpolicy) {\n  // lets use refs for image and status\n  // so we can update them during render\n  // to have instant update in status/image when new data comes in\n  var statusRef = React.useRef('loading');\n  var imageRef = React.useRef();\n\n  // we are not going to use token\n  // but we need to just to trigger state update\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    _ = _React$useState2[0],\n    setStateToken = _React$useState2[1];\n\n  // keep track of old props to trigger changes\n  var oldUrl = React.useRef();\n  var oldCrossOrigin = React.useRef();\n  var oldReferrerPolicy = React.useRef();\n  if (oldUrl.current !== url || oldCrossOrigin.current !== crossOrigin || oldReferrerPolicy.current !== referrerpolicy) {\n    statusRef.current = 'loading';\n    imageRef.current = undefined;\n    oldUrl.current = url;\n    oldCrossOrigin.current = crossOrigin;\n    oldReferrerPolicy.current = referrerpolicy;\n  }\n  React.useLayoutEffect(function () {\n    if (!url) return;\n    var img = document.createElement('img');\n    function onload() {\n      statusRef.current = 'loaded';\n      imageRef.current = img;\n      setStateToken(Math.random());\n    }\n    function onerror() {\n      statusRef.current = 'failed';\n      imageRef.current = undefined;\n      setStateToken(Math.random());\n    }\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    referrerpolicy && (img.referrerPolicy = referrerpolicy);\n    img.src = url;\n    return function cleanup() {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, referrerpolicy]);\n\n  // return array because it is better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [imageRef.current, statusRef.current];\n};","map":{"version":3,"names":["React","require","module","exports","useImage","url","crossOrigin","referrerpolicy","statusRef","useRef","imageRef","_React$useState","useState","_React$useState2","_slicedToArray","_","setStateToken","oldUrl","oldCrossOrigin","oldReferrerPolicy","current","undefined","useLayoutEffect","img","document","createElement","onload","Math","random","onerror","addEventListener","referrerPolicy","src","cleanup","removeEventListener"],"sources":["/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/use-image/index.js"],"sourcesContent":["var React = require('react');\n\nmodule.exports = function useImage(url, crossOrigin, referrerpolicy) {\n  // lets use refs for image and status\n  // so we can update them during render\n  // to have instant update in status/image when new data comes in\n  const statusRef = React.useRef('loading');\n  const imageRef = React.useRef();\n\n  // we are not going to use token\n  // but we need to just to trigger state update\n  const [_, setStateToken] = React.useState(0);\n\n  // keep track of old props to trigger changes\n  const oldUrl = React.useRef();\n  const oldCrossOrigin = React.useRef();\n  const oldReferrerPolicy = React.useRef();\n  if (oldUrl.current !== url || oldCrossOrigin.current !== crossOrigin || oldReferrerPolicy.current !== referrerpolicy) {\n    statusRef.current = 'loading';\n    imageRef.current = undefined;\n    oldUrl.current = url;\n    oldCrossOrigin.current = crossOrigin;\n    oldReferrerPolicy.current = referrerpolicy;\n  }\n\n  React.useLayoutEffect(\n    function () {\n      if (!url) return;\n      var img = document.createElement('img');\n\n      function onload() {\n        statusRef.current = 'loaded';\n        imageRef.current = img;\n        setStateToken(Math.random());\n      }\n\n      function onerror() {\n        statusRef.current = 'failed';\n        imageRef.current = undefined;\n        setStateToken(Math.random());\n      }\n\n      img.addEventListener('load', onload);\n      img.addEventListener('error', onerror);\n      crossOrigin && (img.crossOrigin = crossOrigin);\n      referrerpolicy && (img.referrerPolicy = referrerpolicy);\n      img.src = url;\n\n      return function cleanup() {\n        img.removeEventListener('load', onload);\n        img.removeEventListener('error', onerror);\n      };\n    },\n    [url, crossOrigin, referrerpolicy]\n  );\n\n  // return array because it is better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [imageRef.current, statusRef.current];\n};\n"],"mappings":";AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE5BC,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,GAAG,EAAEC,WAAW,EAAEC,cAAc,EAAE;EACnE;EACA;EACA;EACA,IAAMC,SAAS,GAAGR,KAAK,CAACS,MAAM,CAAC,SAAS,CAAC;EACzC,IAAMC,QAAQ,GAAGV,KAAK,CAACS,MAAM,CAAC,CAAC;;EAE/B;EACA;EACA,IAAAE,eAAA,GAA2BX,KAAK,CAACY,QAAQ,CAAC,CAAC,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAArCI,CAAC,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;;EAEvB;EACA,IAAMI,MAAM,GAAGjB,KAAK,CAACS,MAAM,CAAC,CAAC;EAC7B,IAAMS,cAAc,GAAGlB,KAAK,CAACS,MAAM,CAAC,CAAC;EACrC,IAAMU,iBAAiB,GAAGnB,KAAK,CAACS,MAAM,CAAC,CAAC;EACxC,IAAIQ,MAAM,CAACG,OAAO,KAAKf,GAAG,IAAIa,cAAc,CAACE,OAAO,KAAKd,WAAW,IAAIa,iBAAiB,CAACC,OAAO,KAAKb,cAAc,EAAE;IACpHC,SAAS,CAACY,OAAO,GAAG,SAAS;IAC7BV,QAAQ,CAACU,OAAO,GAAGC,SAAS;IAC5BJ,MAAM,CAACG,OAAO,GAAGf,GAAG;IACpBa,cAAc,CAACE,OAAO,GAAGd,WAAW;IACpCa,iBAAiB,CAACC,OAAO,GAAGb,cAAc;EAC5C;EAEAP,KAAK,CAACsB,eAAe,CACnB,YAAY;IACV,IAAI,CAACjB,GAAG,EAAE;IACV,IAAIkB,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAEvC,SAASC,MAAMA,CAAA,EAAG;MAChBlB,SAAS,CAACY,OAAO,GAAG,QAAQ;MAC5BV,QAAQ,CAACU,OAAO,GAAGG,GAAG;MACtBP,aAAa,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAC9B;IAEA,SAASC,OAAOA,CAAA,EAAG;MACjBrB,SAAS,CAACY,OAAO,GAAG,QAAQ;MAC5BV,QAAQ,CAACU,OAAO,GAAGC,SAAS;MAC5BL,aAAa,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAC9B;IAEAL,GAAG,CAACO,gBAAgB,CAAC,MAAM,EAAEJ,MAAM,CAAC;IACpCH,GAAG,CAACO,gBAAgB,CAAC,OAAO,EAAED,OAAO,CAAC;IACtCvB,WAAW,KAAKiB,GAAG,CAACjB,WAAW,GAAGA,WAAW,CAAC;IAC9CC,cAAc,KAAKgB,GAAG,CAACQ,cAAc,GAAGxB,cAAc,CAAC;IACvDgB,GAAG,CAACS,GAAG,GAAG3B,GAAG;IAEb,OAAO,SAAS4B,OAAOA,CAAA,EAAG;MACxBV,GAAG,CAACW,mBAAmB,CAAC,MAAM,EAAER,MAAM,CAAC;MACvCH,GAAG,CAACW,mBAAmB,CAAC,OAAO,EAAEL,OAAO,CAAC;IAC3C,CAAC;EACH,CAAC,EACD,CAACxB,GAAG,EAAEC,WAAW,EAAEC,cAAc,CACnC,CAAC;;EAED;EACA;EACA;EACA,OAAO,CAACG,QAAQ,CAACU,OAAO,EAAEZ,SAAS,CAACY,OAAO,CAAC;AAC9C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}