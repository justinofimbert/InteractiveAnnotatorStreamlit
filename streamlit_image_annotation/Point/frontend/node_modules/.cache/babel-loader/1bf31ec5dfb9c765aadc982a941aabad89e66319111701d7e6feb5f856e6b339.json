{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity',\n  ALL_LISTENERS = 'allEventListeners',\n  ABSOLUTE_TRANSFORM = 'absoluteTransform',\n  ABSOLUTE_SCALE = 'absoluteScale',\n  CANVAS = 'canvas',\n  CHANGE = 'Change',\n  CHILDREN = 'children',\n  KONVA = 'konva',\n  LISTENING = 'listening',\n  MOUSEENTER = 'mouseenter',\n  MOUSELEAVE = 'mouseleave',\n  NAME = 'name',\n  SET = 'set',\n  SHAPE = 'Shape',\n  SPACE = ' ',\n  STAGE = 'stage',\n  TRANSFORM = 'transform',\n  UPPER_STAGE = 'Stage',\n  VISIBLE = 'visible',\n  TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nvar idCounter = 1;\nexport var Node = /*#__PURE__*/function () {\n  function Node(config) {\n    _classCallCheck(this, Node);\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n  _createClass(Node, [{\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return false;\n    }\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache(attr) {\n      if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n        this._cache.get(attr).dirty = true;\n      } else if (attr) {\n        this._cache.delete(attr);\n      } else {\n        this._cache.clear();\n      }\n    }\n  }, {\n    key: \"_getCache\",\n    value: function _getCache(attr, privateGetter) {\n      var cache = this._cache.get(attr);\n      var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n      var invalid = cache === undefined || isTransform && cache.dirty === true;\n      if (invalid) {\n        cache = privateGetter.call(this);\n        this._cache.set(attr, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"_calculate\",\n    value: function _calculate(name, deps, getter) {\n      var _this = this;\n      if (!this._attachedDepsListeners.get(name)) {\n        var depsString = deps.map(function (dep) {\n          return dep + 'Change.konva';\n        }).join(SPACE);\n        this.on(depsString, function () {\n          _this._clearCache(name);\n        });\n        this._attachedDepsListeners.set(name, true);\n      }\n      return this._getCache(name, getter);\n    }\n  }, {\n    key: \"_getCanvasCache\",\n    value: function _getCanvasCache() {\n      return this._cache.get(CANVAS);\n    }\n  }, {\n    key: \"_clearSelfAndDescendantCache\",\n    value: function _clearSelfAndDescendantCache(attr) {\n      this._clearCache(attr);\n      if (attr === ABSOLUTE_TRANSFORM) {\n        this.fire('absoluteTransformChange');\n      }\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      if (this._cache.has(CANVAS)) {\n        var _this$_cache$get = this._cache.get(CANVAS),\n          scene = _this$_cache$get.scene,\n          filter = _this$_cache$get.filter,\n          hit = _this$_cache$get.hit;\n        Util.releaseCanvas(scene, filter, hit);\n        this._cache.delete(CANVAS);\n      }\n      this._clearSelfAndDescendantCache();\n      this._requestDraw();\n      return this;\n    }\n  }, {\n    key: \"cache\",\n    value: function cache(config) {\n      var conf = config || {};\n      var rect = {};\n      if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        });\n      }\n      var width = Math.ceil(conf.width || rect.width),\n        height = Math.ceil(conf.height || rect.height),\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? Math.floor(rect.x) : conf.x,\n        y = conf.y === undefined ? Math.floor(rect.y) : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false,\n        hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n      if (!width || !height) {\n        Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n        return;\n      }\n      width += offset * 2 + 1;\n      height += offset * 2 + 1;\n      x -= offset;\n      y -= offset;\n      var cachedSceneCanvas = new SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedFilterCanvas = new SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: 0,\n          height: 0\n        }),\n        cachedHitCanvas = new HitCanvas({\n          pixelRatio: hitCanvasPixelRatio,\n          width: width,\n          height: height\n        }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n      cachedHitCanvas.isCache = true;\n      cachedSceneCanvas.isCache = true;\n      this._cache.delete(CANVAS);\n      this._filterUpToDate = false;\n      if (conf.imageSmoothingEnabled === false) {\n        cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n        cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n      }\n      sceneContext.save();\n      hitContext.save();\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n      this._isUnderCache = true;\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      this.drawScene(cachedSceneCanvas, this);\n      this.drawHit(cachedHitCanvas, this);\n      this._isUnderCache = false;\n      sceneContext.restore();\n      hitContext.restore();\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n      this._cache.set(CANVAS, {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      });\n      this._requestDraw();\n      return this;\n    }\n  }, {\n    key: \"isCached\",\n    value: function isCached() {\n      return this._cache.has(CANVAS);\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect(config) {\n      throw new Error('abstract \"getClientRect\" method call');\n    }\n  }, {\n    key: \"_transformedRect\",\n    value: function _transformedRect(rect, top) {\n      var points = [{\n        x: rect.x,\n        y: rect.y\n      }, {\n        x: rect.x + rect.width,\n        y: rect.y\n      }, {\n        x: rect.x + rect.width,\n        y: rect.y + rect.height\n      }, {\n        x: rect.x,\n        y: rect.y + rect.height\n      }];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function (point) {\n        var transformed = trans.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }, {\n    key: \"_drawCachedSceneCanvas\",\n    value: function _drawCachedSceneCanvas(context) {\n      context.save();\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      var canvasCache = this._getCanvasCache();\n      context.translate(canvasCache.x, canvasCache.y);\n      var cacheCanvas = this._getCachedSceneCanvas();\n      var ratio = cacheCanvas.pixelRatio;\n      context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n      context.restore();\n    }\n  }, {\n    key: \"_drawCachedHitCanvas\",\n    value: function _drawCachedHitCanvas(context) {\n      var canvasCache = this._getCanvasCache(),\n        hitCanvas = canvasCache.hit;\n      context.save();\n      context.translate(canvasCache.x, canvasCache.y);\n      context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n      context.restore();\n    }\n  }, {\n    key: \"_getCachedSceneCanvas\",\n    value: function _getCachedSceneCanvas() {\n      var filters = this.filters(),\n        cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n          filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n          try {\n            len = filters.length;\n            filterContext.clear();\n            filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n            imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n              if (typeof filter !== 'function') {\n                Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n                continue;\n              }\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n          }\n          this._filterUpToDate = true;\n        }\n        return filterCanvas;\n      }\n      return sceneCanvas;\n    }\n  }, {\n    key: \"on\",\n    value: function on(evtStr, handler) {\n      this._cache && this._cache.delete(ALL_LISTENERS);\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n      var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split('.');\n        baseEvent = parts[0];\n        name = parts[1] || '';\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(evtStr, callback) {\n      var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n      this._cache && this._cache.delete(ALL_LISTENERS);\n      if (!evtStr) {\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split('.');\n        baseEvent = parts[0];\n        name = parts[1];\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name, callback);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name, callback);\n          }\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      this.on(type, function (evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type) {\n      this.off(type);\n      return this;\n    }\n  }, {\n    key: \"_delegate\",\n    value: function _delegate(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function (evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n        for (var i = 0; i < targets.length; i++) {\n          evt = Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.isDragging()) {\n        this.stopDrag();\n      }\n      DD._dragElements.delete(this._id);\n      this._remove();\n      return this;\n    }\n  }, {\n    key: \"_clearCaches\",\n    value: function _clearCaches() {\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      this._clearSelfAndDescendantCache(STAGE);\n      this._clearSelfAndDescendantCache(VISIBLE);\n      this._clearSelfAndDescendantCache(LISTENING);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this._clearCaches();\n      var parent = this.getParent();\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n        parent._setChildrenIndices();\n        this.parent = null;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.remove();\n      this.clearCache();\n      return this;\n    }\n  }, {\n    key: \"getAttr\",\n    value: function getAttr(attr) {\n      var method = 'get' + Util._capitalize(attr);\n      if (Util._isFunction(this[method])) {\n        return this[method]();\n      }\n      return this.attrs[attr];\n    }\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var parent = this.getParent(),\n        ancestors = [];\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n      return ancestors;\n    }\n  }, {\n    key: \"getAttrs\",\n    value: function getAttrs() {\n      return this.attrs || {};\n    }\n  }, {\n    key: \"setAttrs\",\n    value: function setAttrs(config) {\n      var _this2 = this;\n      this._batchTransformChanges(function () {\n        var key, method;\n        if (!config) {\n          return _this2;\n        }\n        for (key in config) {\n          if (key === CHILDREN) {\n            continue;\n          }\n          method = SET + Util._capitalize(key);\n          if (Util._isFunction(_this2[method])) {\n            _this2[method](config[key]);\n          } else {\n            _this2._setAttr(key, config[key]);\n          }\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"isListening\",\n    value: function isListening() {\n      return this._getCache(LISTENING, this._isListening);\n    }\n  }, {\n    key: \"_isListening\",\n    value: function _isListening(relativeTo) {\n      var listening = this.listening();\n      if (!listening) {\n        return false;\n      }\n      var parent = this.getParent();\n      if (parent && parent !== relativeTo && this !== relativeTo) {\n        return parent._isListening(relativeTo);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this._getCache(VISIBLE, this._isVisible);\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible(relativeTo) {\n      var visible = this.visible();\n      if (!visible) {\n        return false;\n      }\n      var parent = this.getParent();\n      if (parent && parent !== relativeTo && this !== relativeTo) {\n        return parent._isVisible(relativeTo);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit(top) {\n      var skipDragCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (top) {\n        return this._isVisible(top) && this._isListening(top);\n      }\n      var layer = this.getLayer();\n      var layerUnderDrag = false;\n      DD._dragElements.forEach(function (elem) {\n        if (elem.dragStatus !== 'dragging') {\n          return;\n        } else if (elem.node.nodeType === 'Stage') {\n          layerUnderDrag = true;\n        } else if (elem.node.getLayer() === layer) {\n          layerUnderDrag = true;\n        }\n      });\n      var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n      return this.isListening() && this.isVisible() && !dragSkip;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.visible(true);\n      return this;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.visible(false);\n      return this;\n    }\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      return this.index || 0;\n    }\n  }, {\n    key: \"getAbsoluteZIndex\",\n    value: function getAbsoluteZIndex() {\n      var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().slice());\n          }\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n      return index;\n    }\n  }, {\n    key: \"getDepth\",\n    value: function getDepth() {\n      var depth = 0,\n        parent = this.parent;\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n      return depth;\n    }\n  }, {\n    key: \"_batchTransformChanges\",\n    value: function _batchTransformChanges(func) {\n      this._batchingTransformChange = true;\n      func();\n      this._batchingTransformChange = false;\n      if (this._needClearTransformCache) {\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      }\n      this._needClearTransformCache = false;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(pos) {\n      var _this3 = this;\n      this._batchTransformChanges(function () {\n        _this3.x(pos.x);\n        _this3.y(pos.y);\n      });\n      return this;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.x(),\n        y: this.y()\n      };\n    }\n  }, {\n    key: \"getRelativePointerPosition\",\n    value: function getRelativePointerPosition() {\n      if (!this.getStage()) {\n        return null;\n      }\n      var pos = this.getStage().getPointerPosition();\n      if (!pos) {\n        return null;\n      }\n      var transform = this.getAbsoluteTransform().copy();\n      transform.invert();\n      return transform.point(pos);\n    }\n  }, {\n    key: \"getAbsolutePosition\",\n    value: function getAbsolutePosition(top) {\n      var haveCachedParent = false;\n      var parent = this.parent;\n      while (parent) {\n        if (parent.isCached()) {\n          haveCachedParent = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (haveCachedParent && !top) {\n        top = true;\n      }\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Transform(),\n        offset = this.offset();\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n      return absoluteTransform.getTranslation();\n    }\n  }, {\n    key: \"setAbsolutePosition\",\n    value: function setAbsolutePosition(pos) {\n      var origTrans = this._clearTransform();\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n      this._clearCache(TRANSFORM);\n      var it = this._getAbsoluteTransform().copy();\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n      this._setTransform(origTrans);\n      this.setPosition({\n        x: pos.x,\n        y: pos.y\n      });\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      return this;\n    }\n  }, {\n    key: \"_setTransform\",\n    value: function _setTransform(trans) {\n      var key;\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n    }\n  }, {\n    key: \"_clearTransform\",\n    value: function _clearTransform() {\n      var trans = {\n        x: this.x(),\n        y: this.y(),\n        rotation: this.rotation(),\n        scaleX: this.scaleX(),\n        scaleY: this.scaleY(),\n        offsetX: this.offsetX(),\n        offsetY: this.offsetY(),\n        skewX: this.skewX(),\n        skewY: this.skewY()\n      };\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n      return trans;\n    }\n  }, {\n    key: \"move\",\n    value: function move(change) {\n      var changeX = change.x,\n        changeY = change.y,\n        x = this.x(),\n        y = this.y();\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n      this.setPosition({\n        x: x,\n        y: y\n      });\n      return this;\n    }\n  }, {\n    key: \"_eachAncestorReverse\",\n    value: function _eachAncestorReverse(func, top) {\n      var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n      if (top && top._id === this._id) {\n        return;\n      }\n      family.unshift(this);\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n      len = family.length;\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(theta) {\n      this.rotation(this.rotation() + theta);\n      return this;\n    }\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.push(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom() {\n      if (!this.parent) {\n        Util.warn('Node has no parent. moveToBottom function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(zIndex) {\n      if (!this.parent) {\n        Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return this;\n      }\n      if (zIndex < 0 || zIndex >= this.parent.children.length) {\n        Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n      this.parent._setChildrenIndices();\n      return this;\n    }\n  }, {\n    key: \"getAbsoluteOpacity\",\n    value: function getAbsoluteOpacity() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n  }, {\n    key: \"_getAbsoluteOpacity\",\n    value: function _getAbsoluteOpacity() {\n      var absOpacity = this.opacity();\n      var parent = this.getParent();\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= parent.getAbsoluteOpacity();\n      }\n      return absOpacity;\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(newContainer) {\n      if (this.getParent() !== newContainer) {\n        this._remove();\n        newContainer.add(this);\n      }\n      return this;\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue,\n        nonPlainObject;\n      obj.attrs = {};\n      for (key in attrs) {\n        val = attrs[key];\n        nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n        if (nonPlainObject) {\n          continue;\n        }\n        getter = typeof this[key] === 'function' && this[key];\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        attrs[key] = val;\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n      obj.className = this.getClassName();\n      return Util._prepareToStringify(obj);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify(this.toObject());\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return this.parent;\n    }\n  }, {\n    key: \"findAncestors\",\n    value: function findAncestors(selector, includeSelf, stopNode) {\n      var res = [];\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n      var ancestor = this.parent;\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n        ancestor = ancestor.parent;\n      }\n      return res;\n    }\n  }, {\n    key: \"isAncestorOf\",\n    value: function isAncestorOf(node) {\n      return false;\n    }\n  }, {\n    key: \"findAncestor\",\n    value: function findAncestor(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n  }, {\n    key: \"_isMatch\",\n    value: function _isMatch(selector) {\n      if (!selector) {\n        return false;\n      }\n      if (typeof selector === 'function') {\n        return selector(this);\n      }\n      var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Util.isValidSelector(sel)) {\n          Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n          Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n          Util.warn('Konva is awesome, right?');\n        }\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this.className === sel || this.nodeType === sel) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this._getCache(STAGE, this._getStage);\n    }\n  }, {\n    key: \"_getStage\",\n    value: function _getStage() {\n      var parent = this.getParent();\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"fire\",\n    value: function fire(eventType) {\n      var evt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var bubble = arguments.length > 2 ? arguments[2] : undefined;\n      evt.target = evt.target || this;\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        this._fire(eventType, evt);\n      }\n      return this;\n    }\n  }, {\n    key: \"getAbsoluteTransform\",\n    value: function getAbsoluteTransform(top) {\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    }\n  }, {\n    key: \"_getAbsoluteTransform\",\n    value: function _getAbsoluteTransform(top) {\n      var at;\n      if (top) {\n        at = new Transform();\n        this._eachAncestorReverse(function (node) {\n          var transformsEnabled = node.transformsEnabled();\n          if (transformsEnabled === 'all') {\n            at.multiply(node.getTransform());\n          } else if (transformsEnabled === 'position') {\n            at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n          }\n        }, top);\n        return at;\n      } else {\n        at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n        if (this.parent) {\n          this.parent.getAbsoluteTransform().copyInto(at);\n        } else {\n          at.reset();\n        }\n        var transformsEnabled = this.transformsEnabled();\n        if (transformsEnabled === 'all') {\n          at.multiply(this.getTransform());\n        } else if (transformsEnabled === 'position') {\n          var x = this.attrs.x || 0;\n          var y = this.attrs.y || 0;\n          var offsetX = this.attrs.offsetX || 0;\n          var offsetY = this.attrs.offsetY || 0;\n          at.translate(x - offsetX, y - offsetY);\n        }\n        at.dirty = false;\n        return at;\n      }\n    }\n  }, {\n    key: \"getAbsoluteScale\",\n    value: function getAbsoluteScale(top) {\n      var parent = this;\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n        parent = parent.getParent();\n      }\n      var transform = this.getAbsoluteTransform(top);\n      var attrs = transform.decompose();\n      return {\n        x: attrs.scaleX,\n        y: attrs.scaleY\n      };\n    }\n  }, {\n    key: \"getAbsoluteRotation\",\n    value: function getAbsoluteRotation() {\n      return this.getAbsoluteTransform().decompose().rotation;\n    }\n  }, {\n    key: \"getTransform\",\n    value: function getTransform() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    }\n  }, {\n    key: \"_getTransform\",\n    value: function _getTransform() {\n      var _a, _b;\n      var m = this._cache.get(TRANSFORM) || new Transform();\n      m.reset();\n      var x = this.x(),\n        y = this.y(),\n        rotation = Konva.getAngle(this.rotation()),\n        scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n        scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n        skewX = this.attrs.skewX || 0,\n        skewY = this.attrs.skewY || 0,\n        offsetX = this.attrs.offsetX || 0,\n        offsetY = this.attrs.offsetY || 0;\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n      m.dirty = false;\n      return m;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      var attrs = Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n      var node = new this.constructor(attrs);\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n          if (listener.name.indexOf(KONVA) < 0) {\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n      return node;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      var box = this.getClientRect();\n      var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : Math.floor(box.x),\n        y = config.y !== undefined ? config.y : Math.floor(box.y),\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new SceneCanvas({\n          width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n          height: config.height || Math.ceil(box.height) || (stage ? stage.height() : 0),\n          pixelRatio: pixelRatio\n        }),\n        context = canvas.getContext();\n      if (config.imageSmoothingEnabled === false) {\n        context._context.imageSmoothingEnabled = false;\n      }\n      context.save();\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n      this.drawScene(canvas);\n      context.restore();\n      return canvas;\n    }\n  }, {\n    key: \"toCanvas\",\n    value: function toCanvas(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n      var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n      if (config.callback) {\n        config.callback(url);\n      }\n      return url;\n    }\n  }, {\n    key: \"toImage\",\n    value: function toImage(config) {\n      var _this4 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var callback = config === null || config === void 0 ? void 0 : config.callback;\n          if (callback) delete config.callback;\n          Util._urlToImage(_this4.toDataURL(config), function (img) {\n            resolve(img);\n            callback === null || callback === void 0 ? void 0 : callback(img);\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  }, {\n    key: \"toBlob\",\n    value: function toBlob(config) {\n      var _this5 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var callback = config === null || config === void 0 ? void 0 : config.callback;\n          if (callback) delete config.callback;\n          _this5.toCanvas(config).toBlob(function (blob) {\n            resolve(blob);\n            callback === null || callback === void 0 ? void 0 : callback(blob);\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(size) {\n      this.width(size.width);\n      this.height(size.height);\n      return this;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return {\n        width: this.width(),\n        height: this.height()\n      };\n    }\n  }, {\n    key: \"getClassName\",\n    value: function getClassName() {\n      return this.className || this.nodeType;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this.nodeType;\n    }\n  }, {\n    key: \"getDragDistance\",\n    value: function getDragDistance() {\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    }\n  }, {\n    key: \"_off\",\n    value: function _off(type, name, callback) {\n      var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        handler = evtListeners[i].handler;\n        if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n          evtListeners.splice(i, 1);\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"_fireChangeEvent\",\n    value: function _fireChangeEvent(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    }\n  }, {\n    key: \"addName\",\n    value: function addName(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.name(newName);\n      }\n      return this;\n    }\n  }, {\n    key: \"hasName\",\n    value: function hasName(name) {\n      if (!name) {\n        return false;\n      }\n      var fullName = this.name();\n      if (!fullName) {\n        return false;\n      }\n      var names = (fullName || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    }\n  }, {\n    key: \"removeName\",\n    value: function removeName(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.name(names.join(' '));\n      }\n      return this;\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      var func = this[SET + Util._capitalize(attr)];\n      if (Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        this._setAttr(attr, val);\n      }\n      return this;\n    }\n  }, {\n    key: \"_requestDraw\",\n    value: function _requestDraw() {\n      if (Konva.autoDrawEnabled) {\n        var drawNode = this.getLayer() || this.getStage();\n        drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n      }\n    }\n  }, {\n    key: \"_setAttr\",\n    value: function _setAttr(key, val) {\n      var oldVal = this.attrs[key];\n      if (oldVal === val && !Util.isObject(val)) {\n        return;\n      }\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n      if (this._shouldFireChangeEvents) {\n        this._fireChangeEvent(key, oldVal, val);\n      }\n      this._requestDraw();\n    }\n  }, {\n    key: \"_setComponentAttr\",\n    value: function _setComponentAttr(key, component, val) {\n      var oldVal;\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n        if (!oldVal) {\n          this.attrs[key] = this.getAttr(key);\n        }\n        this.attrs[key][component] = val;\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    }\n  }, {\n    key: \"_fireAndBubble\",\n    value: function _fireAndBubble(eventType, evt, compareShape) {\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n      var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n      if (!shouldStop) {\n        this._fire(eventType, evt);\n        var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n        if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getProtoListeners\",\n    value: function _getProtoListeners(eventType) {\n      var listeners = this._cache.get(ALL_LISTENERS);\n      if (!listeners) {\n        listeners = {};\n        var obj = Object.getPrototypeOf(this);\n        while (obj) {\n          if (!obj.eventListeners) {\n            obj = Object.getPrototypeOf(obj);\n            continue;\n          }\n          for (var event in obj.eventListeners) {\n            var newEvents = obj.eventListeners[event];\n            var oldEvents = listeners[event] || [];\n            listeners[event] = newEvents.concat(oldEvents);\n          }\n          obj = Object.getPrototypeOf(obj);\n        }\n        this._cache.set(ALL_LISTENERS, listeners);\n      }\n      return listeners[eventType];\n    }\n  }, {\n    key: \"_fire\",\n    value: function _fire(eventType, evt) {\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n      var topListeners = this._getProtoListeners(eventType);\n      if (topListeners) {\n        for (var i = 0; i < topListeners.length; i++) {\n          topListeners[i].handler.call(this, evt);\n        }\n      }\n      var selfListeners = this.eventListeners[eventType];\n      if (selfListeners) {\n        for (var i = 0; i < selfListeners.length; i++) {\n          selfListeners[i].handler.call(this, evt);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  }, {\n    key: \"_createDragElement\",\n    value: function _createDragElement(evt) {\n      var pointerId = evt ? evt.pointerId : undefined;\n      var stage = this.getStage();\n      var ap = this.getAbsolutePosition();\n      var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n      DD._dragElements.set(this._id, {\n        node: this,\n        startPointerPos: pos,\n        offset: {\n          x: pos.x - ap.x,\n          y: pos.y - ap.y\n        },\n        dragStatus: 'ready',\n        pointerId: pointerId\n      });\n    }\n  }, {\n    key: \"startDrag\",\n    value: function startDrag(evt) {\n      var bubbleEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!DD._dragElements.has(this._id)) {\n        this._createDragElement(evt);\n      }\n      var elem = DD._dragElements.get(this._id);\n      elem.dragStatus = 'dragging';\n      this.fire('dragstart', {\n        type: 'dragstart',\n        target: this,\n        evt: evt && evt.evt\n      }, bubbleEvent);\n    }\n  }, {\n    key: \"_setDragPosition\",\n    value: function _setDragPosition(evt, elem) {\n      var pos = this.getStage()._getPointerById(elem.pointerId);\n      if (!pos) {\n        return;\n      }\n      var newNodePos = {\n        x: pos.x - elem.offset.x,\n        y: pos.y - elem.offset.y\n      };\n      var dbf = this.dragBoundFunc();\n      if (dbf !== undefined) {\n        var bounded = dbf.call(this, newNodePos, evt);\n        if (!bounded) {\n          Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n        } else {\n          newNodePos = bounded;\n        }\n      }\n      if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n        this.setAbsolutePosition(newNodePos);\n        this._requestDraw();\n      }\n      this._lastPos = newNodePos;\n    }\n  }, {\n    key: \"stopDrag\",\n    value: function stopDrag(evt) {\n      var elem = DD._dragElements.get(this._id);\n      if (elem) {\n        elem.dragStatus = 'stopped';\n      }\n      DD._endDragBefore(evt);\n      DD._endDragAfter(evt);\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(draggable) {\n      this._setAttr('draggable', draggable);\n      this._dragChange();\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      var elem = DD._dragElements.get(this._id);\n      return elem ? elem.dragStatus === 'dragging' : false;\n    }\n  }, {\n    key: \"_listenDrag\",\n    value: function _listenDrag() {\n      this._dragCleanup();\n      this.on('mousedown.konva touchstart.konva', function (evt) {\n        var _this6 = this;\n        var shouldCheckButton = evt.evt['button'] !== undefined;\n        var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n        if (!canDrag) {\n          return;\n        }\n        if (this.isDragging()) {\n          return;\n        }\n        var hasDraggingChild = false;\n        DD._dragElements.forEach(function (elem) {\n          if (_this6.isAncestorOf(elem.node)) {\n            hasDraggingChild = true;\n          }\n        });\n        if (!hasDraggingChild) {\n          this._createDragElement(evt);\n        }\n      });\n    }\n  }, {\n    key: \"_dragChange\",\n    value: function _dragChange() {\n      if (this.attrs.draggable) {\n        this._listenDrag();\n      } else {\n        this._dragCleanup();\n        var stage = this.getStage();\n        if (!stage) {\n          return;\n        }\n        var dragElement = DD._dragElements.get(this._id);\n        var isDragging = dragElement && dragElement.dragStatus === 'dragging';\n        var isReady = dragElement && dragElement.dragStatus === 'ready';\n        if (isDragging) {\n          this.stopDrag();\n        } else if (isReady) {\n          DD._dragElements.delete(this._id);\n        }\n      }\n    }\n  }, {\n    key: \"_dragCleanup\",\n    value: function _dragCleanup() {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  }, {\n    key: \"isClientRectOnScreen\",\n    value: function isClientRectOnScreen() {\n      var margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        x: 0,\n        y: 0\n      };\n      var stage = this.getStage();\n      if (!stage) {\n        return false;\n      }\n      var screenRect = {\n        x: -margin.x,\n        y: -margin.y,\n        width: stage.width() + 2 * margin.x,\n        height: stage.height() + 2 * margin.y\n      };\n      return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n  }], [{\n    key: \"create\",\n    value: function create(data, container) {\n      if (Util._isString(data)) {\n        data = JSON.parse(data);\n      }\n      return this._createNode(data, container);\n    }\n  }, {\n    key: \"_createNode\",\n    value: function _createNode(obj, container) {\n      var className = Node.prototype.getClassName.call(obj),\n        children = obj.children,\n        no,\n        len,\n        n;\n      if (container) {\n        obj.attrs.container = container;\n      }\n      if (!Konva[className]) {\n        Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n        className = 'Shape';\n      }\n      var Class = Konva[className];\n      no = new Class(obj.attrs);\n      if (children) {\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          no.add(Node._createNode(children[n]));\n        }\n      }\n      return no;\n    }\n  }]);\n  return Node;\n}();\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n  this._clearCache(TRANSFORM);\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nvar addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"names":["Util","Transform","Factory","SceneCanvas","HitCanvas","Konva","DD","getNumberValidator","getStringValidator","getBooleanValidator","ABSOLUTE_OPACITY","ALL_LISTENERS","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CANVAS","CHANGE","CHILDREN","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","NAME","SET","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","TRANSFORM_CHANGE_STR","join","idCounter","Node","config","_classCallCheck","_id","eventListeners","attrs","index","_allEventListeners","parent","_cache","Map","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_filterUpToDate","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","_createClass","key","value","hasChildren","_clearCache","attr","get","dirty","delete","clear","_getCache","privateGetter","cache","isTransform","invalid","undefined","call","set","_calculate","name","deps","getter","_this","depsString","map","dep","on","_getCanvasCache","_clearSelfAndDescendantCache","fire","clearCache","has","_this$_cache$get","scene","filter","hit","releaseCanvas","_requestDraw","conf","rect","x","y","width","height","getClientRect","skipTransform","relativeTo","getParent","Math","ceil","pixelRatio","floor","offset","drawBorder","hitCanvasPixelRatio","error","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","getContext","hitContext","isCache","imageSmoothingEnabled","_context","save","translate","drawScene","drawHit","restore","beginPath","closePath","setAttr","stroke","isCached","Error","_transformedRect","top","points","minX","minY","maxX","maxY","trans","getAbsoluteTransform","forEach","point","transformed","min","max","_drawCachedSceneCanvas","context","_applyOpacity","_applyGlobalCompositeOperation","canvasCache","cacheCanvas","_getCachedSceneCanvas","ratio","drawImage","_canvas","_drawCachedHitCanvas","hitCanvas","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","len","imageData","n","setSize","length","getWidth","getHeight","getImageData","putImageData","e","message","evtStr","handler","arguments","_delegate","apply","events","split","event","parts","baseEvent","push","off","callback","t","_off","dispatchEvent","evt","target","type","addEventListener","removeEventListener","selector","stopNode","targets","findAncestors","i","cloneObject","currentTarget","remove","isDragging","stopDrag","_dragElements","_remove","_clearCaches","children","splice","_setChildrenIndices","destroy","getAttr","method","_capitalize","_isFunction","getAncestors","ancestors","getAttrs","_this2","_batchTransformChanges","_setAttr","isListening","_isListening","listening","isVisible","_isVisible","visible","shouldDrawHit","skipDragCheck","layer","getLayer","layerUnderDrag","elem","dragStatus","node","nodeType","dragSkip","hitOnDragEnabled","show","hide","getZIndex","getAbsoluteZIndex","depth","getDepth","that","nodes","child","addChildren","concat","getChildren","slice","getStage","func","setPosition","pos","_this3","getPosition","getRelativePointerPosition","getPointerPosition","transform","copy","invert","getAbsolutePosition","haveCachedParent","absoluteMatrix","getMatrix","absoluteTransform","m","getTranslation","setAbsolutePosition","origTrans","_clearTransform","it","_getAbsoluteTransform","_setTransform","rotation","scaleX","scaleY","offsetX","offsetY","skewX","skewY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","rotate","theta","moveToTop","warn","moveUp","moveDown","moveToBottom","setZIndex","zIndex","getAbsoluteOpacity","_getAbsoluteOpacity","absOpacity","opacity","moveTo","newContainer","add","toObject","obj","val","defaultValue","nonPlainObject","isObject","_isPlainObject","_isArray","className","getClassName","_prepareToStringify","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","isAncestorOf","findAncestor","selectorArr","replace","sel","isValidSelector","charAt","id","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","transformsEnabled","multiply","getTransform","copyInto","reset","getAbsoluteScale","decompose","getAbsoluteRotation","_getTransform","_a","_b","getAngle","skew","scale","clone","allListeners","listener","constructor","indexOf","_toKonvaCanvas","box","stage","canvas","toCanvas","toDataURL","mimeType","quality","url","toImage","_this4","Promise","resolve","reject","_urlToImage","img","err","toBlob","_this5","blob","size","getSize","getType","getDragDistance","dragDistance","evtListeners","evtName","_fireChangeEvent","oldVal","newVal","addName","oldName","newName","fullName","names","removeName","autoDrawEnabled","drawNode","batchDraw","_setComponentAttr","component","compareShape","shouldStop","stopBubble","cancelBubble","_getProtoListeners","listeners","Object","getPrototypeOf","newEvents","oldEvents","topListeners","selfListeners","draw","_createDragElement","pointerId","ap","_getPointerById","_changedPointerPositions","startPointerPos","startDrag","bubbleEvent","_setDragPosition","newNodePos","dbf","dragBoundFunc","bounded","_endDragBefore","_endDragAfter","setDraggable","draggable","_dragChange","_listenDrag","_dragCleanup","_this6","shouldCheckButton","canDrag","dragButtons","hasDraggingChild","dragElement","isReady","isClientRectOnScreen","margin","screenRect","haveIntersection","create","data","container","_isString","parse","_createNode","prototype","no","Class","_attrsAffectingSize","addGetterSetter","addComponentsGetterSetter","backCompat","rotateDeg","setRotationDeg","getRotationDeg"],"sources":["/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/Node.js"],"sourcesContent":["import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        if (this._cache.has(CANVAS)) {\n            const { scene, filter, hit } = this._cache.get(CANVAS);\n            Util.releaseCanvas(scene, filter, hit);\n            this._cache.delete(CANVAS);\n        }\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2 + 1;\n        height += offset * 2 + 1;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        this.clearCache();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height ||\n                Math.ceil(box.height) ||\n                (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        if (config.imageSmoothingEnabled === false) {\n            context._context.imageSmoothingEnabled = false;\n        }\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                Util._urlToImage(this.toDataURL(config), function (img) {\n                    resolve(img);\n                    callback === null || callback === void 0 ? void 0 : callback(img);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                this.toCanvas(config).toBlob((blob) => {\n                    resolve(blob);\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}