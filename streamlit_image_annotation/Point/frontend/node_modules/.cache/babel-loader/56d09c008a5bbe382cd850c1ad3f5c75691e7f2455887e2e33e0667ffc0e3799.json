{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var Arc = /*#__PURE__*/function (_Shape) {\n  _inherits(Arc, _Shape);\n  var _super = _createSuper(Arc);\n  function Arc() {\n    _classCallCheck(this, Arc);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Arc, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var angle = Konva.getAngle(this.angle()),\n        clockwise = this.clockwise();\n      context.beginPath();\n      context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n      context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.outerRadius() * 2;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.outerRadius() * 2;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.outerRadius(width / 2);\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.outerRadius(height / 2);\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var innerRadius = this.innerRadius();\n      var outerRadius = this.outerRadius();\n      var clockwise = this.clockwise();\n      var angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n      var boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n      var boundRightRatio = 1;\n      var boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n      var boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n      var boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n      var boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n      var boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n      var boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n      return {\n        x: boundLeft,\n        y: clockwise ? -1 * boundBottom : boundTop,\n        width: boundRight - boundLeft,\n        height: boundBottom - boundTop\n      };\n    }\n  }]);\n  return Arc;\n}(Shape);\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());","map":{"version":3,"names":["Factory","Shape","Konva","getNumberValidator","getBooleanValidator","_registerNode","Arc","_Shape","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_sceneFunc","context","angle","getAngle","clockwise","beginPath","arc","outerRadius","innerRadius","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","getSelfRect","boundLeftRatio","Math","cos","min","PI","boundRightRatio","boundTopRatio","sin","max","boundBottomRatio","boundLeft","boundRight","boundTop","boundBottom","x","y","prototype","_centroid","className","_attrsAffectingSize","addGetterSetter"],"sources":["/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/shapes/Arc.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}