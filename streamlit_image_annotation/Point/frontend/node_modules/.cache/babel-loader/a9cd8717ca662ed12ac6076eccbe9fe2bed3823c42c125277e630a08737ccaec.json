{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport var Group = /*#__PURE__*/function (_Container) {\n  _inherits(Group, _Container);\n  var _super = _createSuper(Group);\n  function Group() {\n    _classCallCheck(this, Group);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Group, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  }]);\n  return Group;\n}(Container);\nGroup.prototype.nodeType = 'Group';\n_registerNode(Group);","map":{"version":3,"names":["Util","Container","_registerNode","Group","_Container","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_validateAdd","child","type","getType","throw","prototype","nodeType"],"sources":["/home/DigPatho/InteractiveAnnotatorStreamlitV3/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/Group.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport class Group extends Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nGroup.prototype.nodeType = 'Group';\n_registerNode(Group);\n"],"mappings":";;;;AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,aAAa,QAAQ,aAAa;AAC3C,WAAaC,KAAK,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,KAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,KAAA;EAAA,SAAAA,MAAA;IAAAK,eAAA,OAAAL,KAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,KAAA;IAAAS,GAAA;IAAAC,KAAA,EACd,SAAAC,aAAaC,KAAK,EAAE;MAChB,IAAIC,IAAI,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;MAC1B,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,EAAE;QACtChB,IAAI,CAACkB,KAAK,CAAC,+CAA+C,CAAC;MAC/D;IACJ;EAAC;EAAA,OAAAf,KAAA;AAAA,EANsBF,SAAS;AAQpCE,KAAK,CAACgB,SAAS,CAACC,QAAQ,GAAG,OAAO;AAClClB,aAAa,CAACC,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}