{"ast":null,"code":"import _classCallCheck from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#',\n  BEFORE_DRAW = 'beforeDraw',\n  DRAW = 'draw',\n  INTERSECTION_OFFSETS = [{\n    x: 0,\n    y: 0\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 1,\n    y: 1\n  }, {\n    x: -1,\n    y: 1\n  }],\n  INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport var Layer = /*#__PURE__*/function (_Container) {\n  _inherits(Layer, _Container);\n  var _super = _createSuper(Layer);\n  function Layer(config) {\n    var _this;\n    _classCallCheck(this, Layer);\n    _this = _super.call(this, config);\n    _this.canvas = new SceneCanvas();\n    _this.hitCanvas = new HitCanvas({\n      pixelRatio: 1\n    });\n    _this._waitingForDraw = false;\n    _this.on('visibleChange.konva', _this._checkVisibility);\n    _this._checkVisibility();\n    _this.on('imageSmoothingEnabledChange.konva', _this._setSmoothEnabled);\n    _this._setSmoothEnabled();\n    return _this;\n  }\n  _createClass(Layer, [{\n    key: \"createPNGStream\",\n    value: function createPNGStream() {\n      var c = this.canvas._canvas;\n      return c.createPNGStream();\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getNativeCanvasElement\",\n    value: function getNativeCanvasElement() {\n      return this.canvas._canvas;\n    }\n  }, {\n    key: \"getHitCanvas\",\n    value: function getHitCanvas() {\n      return this.hitCanvas;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.getCanvas().getContext();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      this.getContext().clear(bounds);\n      this.getHitCanvas().getContext().clear(bounds);\n      return this;\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(index) {\n      _get(_getPrototypeOf(Layer.prototype), \"setZIndex\", this).call(this, index);\n      var stage = this.getStage();\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (index < stage.children.length - 1) {\n          stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n        } else {\n          stage.content.appendChild(this.getNativeCanvasElement());\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop() {\n      Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n      return true;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var moved = Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return false;\n      }\n      var stage = this.getStage();\n      if (!stage || !stage.content) {\n        return false;\n      }\n      stage.content.removeChild(this.getNativeCanvasElement());\n      if (this.index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n      return true;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      if (Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.children;\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom() {\n      if (Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.children;\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _canvas = this.getNativeCanvasElement();\n      Node.prototype.remove.call(this);\n      if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this.parent;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n      this._setSmoothEnabled();\n      return this;\n    }\n  }, {\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Util.throw('You may only add groups and shapes to a layer.');\n      }\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.width = config.width || this.getWidth();\n      config.height = config.height || this.getHeight();\n      config.x = config.x !== undefined ? config.x : this.x();\n      config.y = config.y !== undefined ? config.y : this.y();\n      return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      var visible = this.visible();\n      if (visible) {\n        this.canvas._canvas.style.display = 'block';\n      } else {\n        this.canvas._canvas.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"_setSmoothEnabled\",\n    value: function _setSmoothEnabled() {\n      this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      if (this.parent) {\n        return this.parent.width();\n      }\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth() {\n      Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      if (this.parent) {\n        return this.parent.height();\n      }\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight() {\n      Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      var _this2 = this;\n      if (!this._waitingForDraw) {\n        this._waitingForDraw = true;\n        Util.requestAnimFrame(function () {\n          _this2.draw();\n          _this2._waitingForDraw = false;\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!this.isListening() || !this.isVisible()) {\n        return null;\n      }\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (var i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          var intersectionOffset = INTERSECTION_OFFSETS[i];\n          var obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          var shape = obj.shape;\n          if (shape) {\n            return shape;\n          }\n          continueSearch = !!obj.antialiased;\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    }\n  }, {\n    key: \"_getIntersection\",\n    value: function _getIntersection(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n      var p3 = p[3];\n      if (p3 === 255) {\n        var colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n        var shape = shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        return {\n          antialiased: true\n        };\n      }\n      return {};\n    }\n  }, {\n    key: \"drawScene\",\n    value: function drawScene(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas();\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n      if (this.clearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n      Container.prototype.drawScene.call(this, canvas, top);\n      this._fire(DRAW, {\n        node: this\n      });\n      return this;\n    }\n  }, {\n    key: \"drawHit\",\n    value: function drawHit(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas;\n      if (layer && layer.clearBeforeDraw()) {\n        layer.getHitCanvas().getContext().clear();\n      }\n      Container.prototype.drawHit.call(this, canvas, top);\n      return this;\n    }\n  }, {\n    key: \"enableHitGraph\",\n    value: function enableHitGraph() {\n      this.hitGraphEnabled(true);\n      return this;\n    }\n  }, {\n    key: \"disableHitGraph\",\n    value: function disableHitGraph() {\n      this.hitGraphEnabled(false);\n      return this;\n    }\n  }, {\n    key: \"setHitGraphEnabled\",\n    value: function setHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      this.listening(val);\n    }\n  }, {\n    key: \"getHitGraphEnabled\",\n    value: function getHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      return this.listening();\n    }\n  }, {\n    key: \"toggleHitCanvas\",\n    value: function toggleHitCanvas() {\n      if (!this.parent || !this.parent['content']) {\n        return;\n      }\n      var parent = this.parent;\n      var added = !!this.hitCanvas._canvas.parentNode;\n      if (added) {\n        parent.content.removeChild(this.hitCanvas._canvas);\n      } else {\n        parent.content.appendChild(this.hitCanvas._canvas);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n      return _get(_getPrototypeOf(Layer.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return Layer;\n}(Container);\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());","map":{"version":3,"names":["Util","Container","Node","Factory","SceneCanvas","HitCanvas","getBooleanValidator","shapes","_registerNode","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Layer","_Container","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","canvas","hitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","_createClass","key","value","createPNGStream","c","_canvas","getCanvas","getNativeCanvasElement","getHitCanvas","getContext","clear","bounds","setZIndex","index","_get","_getPrototypeOf","prototype","stage","getStage","content","removeChild","children","insertBefore","appendChild","moveToTop","moveUp","moved","moveDown","moveToBottom","getLayer","remove","parentNode","_isInDocument","parent","setSize","_ref","width","height","_validateAdd","child","type","getType","throw","_toKonvaCanvas","getWidth","getHeight","undefined","visible","style","display","_context","imageSmoothingEnabled","setWidth","warn","setHeight","batchDraw","_this2","requestAnimFrame","draw","getIntersection","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","drawScene","can","top","layer","_fire","node","clearBeforeDraw","drawHit","enableHitGraph","hitGraphEnabled","disableHitGraph","setHitGraphEnabled","val","listening","getHitGraphEnabled","toggleHitCanvas","added","destroy","releaseCanvas","nodeType","addGetterSetter"],"sources":["/home/DigPatho/Streamlit-Image-Annotation/streamlit_image_annotation/Point/frontend/node_modules/konva/lib/Layer.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}